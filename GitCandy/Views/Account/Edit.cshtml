@model GitCandy.Models.UserModel

@{
    ViewBag.Title = string.Format(SR.Shared_TitleFormat, string.Format(SR.Account_EditTitle, Model.Name));
    var token = GitCandy.Security.Token.Current;
}

<h4>@string.Format(SR.Account_EditTitle, Model.Name)</h4>

<div class="row">
    <div class="col-md-12">

        @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="form-group">
                @Html.LabelFor(s => s.Name, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <span class="col-sm-4 form-control lead">@Model.Name</span>
                </div>
                @Html.HiddenFor(s => s.Name, new { @class = "col-sm-4 form-control lead" })
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Password, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.PasswordFor(s => s.Password, new { @class = "col-sm-4 form-control lead" })
                </div>
                <div class="text-error col-sm-4">
                    @Html.ValidationMessageFor(s => s.Password)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Nickname, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.Nickname, new { @class = "col-sm-4 form-control lead" })
                </div>
                <div class="text-error col-sm-4">
                    @Html.ValidationMessageFor(s => s.Nickname)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Email, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.Email, new { @class = "col-sm-4 form-control lead" })
                </div>
                <div class="text-error col-sm-4">
                    @Html.ValidationMessageFor(s => s.Email)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.Description, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextAreaFor(s => s.Description, 4, 0, new { @class = "col-sm-4 form-control lead" })
                </div>
                <div class="text-error col-sm-4">
                    @Html.ValidationMessageFor(s => s.Description)
                </div>
            </div>

            if (token.IsSystemAdministrator)
            {
                <div class="form-group">
                    @Html.LabelFor(s => s.IsSystemAdministrator, new { @class = "col-sm-3 control-label lead muted" })
                    <div class="col-sm-5">
                        <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                            @Html.CheckBoxFor(s => s.IsSystemAdministrator)
                        </div>
                    </div>
                    <div class="text-error col-sm-4">
                        @Html.ValidationMessageFor(s => s.IsSystemAdministrator)
                    </div>
                </div>
            }
            <div class="form-group">
                <div class="col-md-6 col-sm-offset-3">
                    @Html.ValidationSummary(true, SR.Account_UpdateUnsuccessfull, new { @class = "alert alert-error" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-3 col-md-6">
                    @if (token.IsSystemAdministrator)
                    {
                        @Html.ActionLink(SR.Shared_Delete, "Delete", new { Model.Name }, new { @class = "btn btn-danger" })
                    }
                    <button type="reset" class="btn btn-inverse">@SR.Shared_Reset</button>
                    <button type="submit" class="btn btn-primary">@SR.Shared_Save</button>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.ActionLink(SR.Shared_Back, "Detail", new { Model.Name }, new { @class = "btn btn-default" })
                </div>
            </div>
        }

    </div>
</div>
