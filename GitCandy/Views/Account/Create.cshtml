@model GitCandy.Models.UserModel

@{
    ViewBag.Title = string.Format(SR.Shared_TitleFormat, SR.Account_CreateTitle);
}

<h4>@SR.Account_CreateTitle</h4>

<div class="row">
    @using (Html.BeginForm("Create", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="form-group">
            @Html.LabelFor(s => s.Name, new { @class = "col-md-3 control-label lead muted" })
            <div class="col-md-5">
                @Html.TextBoxFor(s => s.Name, new { @class = "col-md-4 form-control lead" })
            </div>
            <div class="text-error col-md-4">
                @Html.ValidationMessageFor(s => s.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.Nickname, new { @class = "col-md-3 control-label lead muted" })
            <div class="col-md-5">
                @Html.TextBoxFor(s => s.Nickname, new { @class = "col-md-4 form-control lead" })
            </div>
            <span class="text-error col-md-4">
                @Html.ValidationMessageFor(s => s.Nickname)
            </span>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.Password, new { @class = "col-md-3 control-label lead muted" })
            <div class="col-md-5">
                @Html.PasswordFor(s => s.Password, new { @class = "col-md-4 form-control lead" })
            </div>
            <span class="text-error col-md-4">
                @Html.ValidationMessageFor(s => s.Password)
            </span>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.ConformPassword, new { @class = "col-md-3 control-label lead muted" })
            <div class="col-md-5">
                @Html.PasswordFor(s => s.ConformPassword, new { @class = "col-md-4 form-control lead" })
            </div>
            <span class="text-error col-md-4">
                @Html.ValidationMessageFor(s => s.ConformPassword)
            </span>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.Email, new { @class = "col-md-3 control-label lead muted" })
            <div class="col-md-5">
                @Html.TextBoxFor(s => s.Email, new { @class = "col-md-4 form-control lead" })
            </div>
            <span class="text-error col-md-4">
                @Html.ValidationMessageFor(s => s.Email)
            </span>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.Description, new { @class = "col-md-3 control-label lead muted" })
            <div class="col-md-5">
                @Html.TextAreaFor(s => s.Description, 4, 0, new { @class = "col-md-4 form-control lead" })
            </div>
            <span class="text-error col-md-4">
                @Html.ValidationMessageFor(s => s.Description)
            </span>
        </div>
        <div class="col-md-offset-3">
            @Html.ValidationSummary(true, SR.Account_CreationUnsuccessfull, new { @class = "alert alert-error" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-3">
                <button type="reset" class="btn btn-inverse">@SR.Shared_Reset</button>
                <button type="submit" class="btn btn-primary">@SR.Shared_Create</button>
            </div>
        </div>
    }
</div>
