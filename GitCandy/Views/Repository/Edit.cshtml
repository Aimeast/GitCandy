@model GitCandy.Models.RepositoryModel

@{
    ViewBag.Title = string.Format(SR.Shared_TitleFormat, string.Format(SR.Repository_EditTitle, Model.Name));
    var token = GitCandy.Security.Token.Current;
}

<h3>@string.Format(SR.Repository_EditTitle, Model.Name)</h3>


    @using (Html.BeginForm("Edit", "Repository", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="form-group">
            @Html.LabelFor(s => s.Name, new { @class = "col-md-3 control-label" })
            <div class="col-lg-6">
            <input type="text" disabled class="form-control" value="@Model.Name" />
            @Html.HiddenFor(s => s.Name)
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.IsPrivate, new { @class = "col-md-3 control-label" })
            <div class="col-lg-6">
            <div class="switch switch-larger" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                @Html.CheckBoxFor(s => s.IsPrivate)
            </div>
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.AllowAnonymousRead, new { @class = "col-md-3 control-label" })
            <div class="col-lg-6">
            <div class="switch switch-larger" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                @Html.CheckBoxFor(s => s.AllowAnonymousRead)
            </div>
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.AllowAnonymousWrite, new { @class = "col-md-3 control-label" })
            <div class="col-lg-6">
            <div class="switch switch-larger" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                @Html.CheckBoxFor(s => s.AllowAnonymousWrite)
            </div>
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.DefaultBranch, new { @class = "col-md-3 control-label" })
            <div class="col-lg-6">
            <div class="switch switch-larger" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                @Html.DropDownListFor(s => s.DefaultBranch, Model.LocalBranches.ToSelectListItem(Model.DefaultBranch),  new { @class = "form-control w-half" })
            </div>
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(s => s.Description, new { @class = "col-md-3 control-label" })
            <div class="col-lg-6">
            @Html.TextAreaFor(s => s.Description, 4, 0, new { @class = "form-control" })
			<span class="text-danger">
                @Html.ValidationMessageFor(s => s.Description)
            </span>
			</div>
        </div>

        @Html.ValidationSummary(true, SR.Repository_UpdateUnsuccessfull, new { @class = "alert alert-dismissable alert-danger" })

        <div class="form-group">
            <div class="col-lg-6 col-lg-offset-3">
			<button type="submit" class="btn btn-primary">@SR.Shared_Save</button> &nbsp;
			<button type="reset" class="btn btn-inverse">@SR.Shared_Reset</button> &nbsp;
			 @if (token != null && (Model.CurrentUserIsOwner || token.IsSystemAdministrator))
			{
				@Html.ActionLink(SR.Shared_Delete, "Delete", new { Model.Name }, new { @class = "btn btn-danger" })
			}
			</div>
        </div>

        <div class="form-actions">
            <div class="pull-left">
                
            </div>
            <div class="pull-right">
               
                
                
            </div>
        </div>

    }

    <p>
        @Html.ActionLink(SR.Shared_Back, "Detail", new { Model.Name }, new { @class = "btn btn-primary" })
    </p>
