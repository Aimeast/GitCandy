@model GitCandy.Models.RepositoryModel

@{
    ViewBag.Title = string.Format(SR.Shared_TitleFormat, string.Format(SR.Repository_DetailTitle, Model.Name));
    var token = GitCandy.Security.Token.Current;
}

<h4>@string.Format(SR.Repository_DetailTitle, Model.Name)</h4>

@if (Model != null)
{
    <dl class="dl-horizontal">

        <dt class="lead muted">@Html.DisplayNameFor(s => s.Name)</dt>
        <dd class="lead">@Model.Name</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.IsPrivate)</dt>
        <dd class="lead">@Html.DisplayFor(s => s.IsPrivate)</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.AllowAnonymousRead)</dt>
        <dd class="lead">@Html.DisplayFor(s => s.AllowAnonymousRead)</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.AllowAnonymousWrite)</dt>
        <dd class="lead">@Html.DisplayFor(s => s.AllowAnonymousWrite)</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.DefaultBranch)</dt>
        <dd class="lead">@Model.DefaultBranch</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.Description)</dt>
        <dd class="lead">@Model.Description</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.Collaborators)</dt>
        <dd class="lead">@Html.DisplayFor(s => s.Collaborators)</dd>


        <dt class="lead muted">@Html.DisplayNameFor(s => s.Teams)</dt>
        <dd class="lead">@Html.DisplayFor(s => s.Teams)</dd>

        <dt>
        </dt>
        <dd>
            @Html.ActionLink(SR.Repository_Tree, "Tree", new { Model.Name }, new { @class = "btn btn-default" })

            @if (token != null && (Model.CurrentUserIsOwner || token.IsSystemAdministrator))
            {
                @Html.ActionLink(SR.Repository_Relationship, "Coop", new { Model.Name }, new { @class = "btn btn-default" })
                @Html.ActionLink(SR.Shared_Edit, "Edit", new { Model.Name }, new { @class = "btn btn-primary" })
            }
        </dd>
    </dl>
}