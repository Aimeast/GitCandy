@model GitCandy.Models.SettingModel

@{
    ViewBag.Title = string.Format(SR.Shared_TitleFormat, SR.Setting_EditTitle);
}

<h4>@SR.Setting_EditTitle</h4>

<div class="row">
    <div class="col-md-12">

        @using (Html.BeginForm("Edit", "Setting", FormMethod.Post, new { @class = "form-horizontal" }))
        {
            <div class="form-group">
                @Html.LabelFor(s => s.IsPublicServer, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                        @Html.CheckBoxFor(s => s.IsPublicServer, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.ForceSsl, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                        @Html.CheckBoxFor(s => s.ForceSsl, new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.EnableSsh, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                        @Html.CheckBoxFor(s => s.EnableSsh, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.SslPort, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.SslPort, new { @class = "col-sm-4 form-control lead" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.SshPort, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.SshPort, new { @class = "col-sm-4 form-control lead" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.LocalSkipCustomError, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                        @Html.CheckBoxFor(s => s.LocalSkipCustomError)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.AllowRegisterUser, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                        @Html.CheckBoxFor(s => s.AllowRegisterUser)
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.AllowRepositoryCreation, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    <div class="switch switch-small" data-on-label="@SR.Shared_Yes" data-off-label="@SR.Shared_No">
                        @Html.CheckBoxFor(s => s.AllowRepositoryCreation)
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.RepositoryPath, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.RepositoryPath, new { @class = "col-sm-4 form-control lead" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.CachePath, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.CachePath, new { @class = "col-sm-4 form-control lead" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.GitCorePath, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.GitCorePath, new { @class = "col-sm-4 form-control lead" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.NumberOfCommitsPerPage, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.NumberOfCommitsPerPage, new { @class = "col-sm-4 form-control lead" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(s => s.NumberOfItemsPerList, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.NumberOfItemsPerList, new { @class = "col-sm-4 form-control lead" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(s => s.NumberOfRepositoryContributors, new { @class = "col-sm-3 control-label lead muted" })
                <div class="col-sm-5">
                    @Html.TextBoxFor(s => s.NumberOfRepositoryContributors, new { @class = "col-sm-4 form-control lead" })
                </div>
            </div>
            if (!ViewData.ModelState.IsValid)
            {
                @Html.ValidationSummary(SR.Setting_UpdateSettingsUnsuccessfull, new { @class = "alert alert-error" })
            }
            <div class="form-group">
                <div class="col-sm-offset-4 col-md-6">
                    <button type="reset" class="btn btn-inverse">@SR.Shared_Reset</button>
                    <button type="submit" class="btn btn-primary">@SR.Shared_Save</button>
                </div>

            </div>
            <div class="form-group">
                <div class="col-sm-offset-4 col-md-6">
                    @Html.ActionLink(SR.Shared_Restart, "Restart", null, new { @class = "btn btn-danger" })
                    @Html.ActionLink(SR.Setting_ReGenSsh, "ReGenSsh", null, new { @class = "btn btn-default" })
                </div>
            </div>
        }
    </div>
</div>
